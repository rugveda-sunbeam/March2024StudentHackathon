package com.sunbeam.tester;

import java.sql.SQLException;
import java.util.Date;
import java.util.List;
import java.util.Scanner;

import com.sunbeam.dao.BlogDao;
import com.sunbeam.dao.CategoryDAO;
import com.sunbeam.dao.UserDao;
import com.sunbeam.entity.Blog;
import com.sunbeam.entity.Category;
import com.sunbeam.entity.User;

public class BlogWriting {

	static final Scanner scanner = new Scanner(System.in);

	public static void register() throws SQLException {
		Scanner scanner = new Scanner(System.in);

		System.out.println("Welcome! Please enter your information to register:");

		System.out.print("Full Name: ");
		String fullName = scanner.nextLine();

		System.out.print("Email: ");
		String email = scanner.nextLine();

		System.out.print("Password: ");
		String password = scanner.nextLine();

		System.out.print("Phone: ");
		String phone = scanner.nextLine();

		scanner.close();

		User user = new User(fullName, email, password, phone);
		UserDao userDao = new UserDao();
		userDao.register(user);

		System.out.println("Registration successful!");
	}

	public static User signIn() throws SQLException {
		UserDao userDao = new UserDao();

		System.out.println("Sign In:");
		System.out.print("Enter email: ");
		String email = scanner.nextLine();

		System.out.print("Enter password: ");
		String password = scanner.nextLine();

		User user = userDao.signIn(email, password);
		if (user != null) {
			System.out.println(user.getEmail() + " User Successfully Logged In");
		} else {
			System.out.println("Invalid email or password. Sign in failed.");
		}

		return user;
	}

	public static int mainMenu(User user) {
		System.out.println("Welcome " + user.getFull_name());
		System.out.println("\n--- Main Menu ---");
		System.out.println("1. Add Category");
		System.out.println("2. Show Categories");
		System.out.println("3. All Blogs");
		System.out.println("4. My Blogs");
		System.out.println("5. Add Blog");
		System.out.println("6. Edit Blog");
		System.out.println("7. Search Blog");
		System.out.println("8. Delete Blog");
		System.out.println("9. Logout");
		System.out.print("Enter your choice: ");
		int choice = scanner.nextInt();
		return choice;
	}

	public static void addCategory() {
		try (CategoryDAO categoryDAO = new CategoryDAO()) {
			System.out.println("Enter the title of the new category:");
			String title = scanner.nextLine();

			System.out.println("Enter the description of the new category:");
			String description = scanner.nextLine();

			// Create a new Category object
			Category newCategory = new Category(title, description);

			// Add the new category
			categoryDAO.addCategory(newCategory);
		} catch (Exception e) {
			// TODO: handle exception
		}

	}

	public static void ShowAllCategory() {
		try (CategoryDAO categoryDAO = new CategoryDAO()) {
			List<Category> allCategories = categoryDAO.getAllCategories();
			System.out.println("\n--- All Categories ---");
			for (Category category : allCategories) {
				System.out.println(category);
			}
		} catch (Exception e) {
			// TODO: handle exception
		}
	}

	public static void viewAllBlogs() throws Exception {
		try (BlogDao blogDao = new BlogDao()) {
			List<Blog> allBlogs = blogDao.getAllBlogs();

			if (allBlogs.isEmpty()) {
				System.out.println("No blogs found in the database.");
			} else {
				System.out.println("All Blogs:");
				for (Blog blog : allBlogs) {
					System.out.println(blog);
				}
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	static void mainMenuImpl(User user) {

		int choice = mainMenu(user);
		switch (choice) {
		case 1:
			addCategory();
			break;
		case 2:
			ShowAllCategory();

		case 3:
			try {
				viewAllBlogs();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			break;
		case 4:
			try {
				getBlogByUser();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			break;
		case 5:

		default:
			break;
		}

	}

	public static void addBlog() throws Exception {
		try (BlogDao blogDAO = new BlogDao()) {
			System.out.println("Enter the title of the new blog:");
			String title = scanner.nextLine();

			System.out.println("Enter the contents of the new blog:");
			String contents = scanner.nextLine();

			System.out.println("Enter the user ID for the new blog:");
			int userId = scanner.nextInt();

			System.out.println("Enter the category ID for the new blog:");
			int categoryId = scanner.nextInt();

			// Create a new Blog object
			Blog newBlog = new Blog(title, contents, userId, categoryId);

			// Add the blog to the database
			blogDAO.addBlog(newBlog);

		} catch (SQLException e) {
			e.printStackTrace();
		}

	}

	public static void updateBlog() throws Exception {
		try (BlogDao blogDao = new BlogDao()) {

			// Assume we want to update a blog with ID 1
			Blog updatedBlog = new Blog();
			updatedBlog.setId(1);
			updatedBlog.setTitle("flbndfb.'fdvbb");
			updatedBlog.setContents("fdlh;fdjb dfa;lbdfgbw] vb ");
			updatedBlog.setCreated_time(new Date()); // Initialize with current date/time
			updatedBlog.setUser_id(1); // Example user ID
			updatedBlog.setCategory_id(1); // Example category ID

			// Update the blog
			blogDao.updateBlog(updatedBlog);

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public static void deleteBlog() throws Exception {
		try (BlogDao blogDao = new BlogDao()) {
			int blogIdToDelete = 1;

			// Delete the blog
			blogDao.deleteBlog(blogIdToDelete);

		} catch (

		SQLException e) {
			e.printStackTrace();
		}
	}

	public static void searchBlog() throws Exception {
		try (BlogDao blogDao = new BlogDao()) {
			;

			// Search for blogs with "java" in title or contents
			String searchTerm = "AI";
			List<Blog> searchResults = blogDao.searchBlogs(searchTerm);

			if (searchResults.isEmpty()) {
				System.out.println("No blogs found matching the search term: " + searchTerm);
			} else {
				System.out.println("Search results for '" + searchTerm + "':");
				for (Blog blog : searchResults) {
					System.out.println(blog);
				}
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public static void getBlogByUser() throws Exception {
		try (BlogDao blogDao = new BlogDao()) {
			System.out.println("Enter the user ID to get blogs:");
			int userId = scanner.nextInt();

			List<Blog> userBlogs = blogDao.getBlogsByUserId(userId);

			if (userBlogs.isEmpty()) {
				System.out.println("No blogs found for user with ID: " + userId);
			} else {
				System.out.println("Blogs created by user with ID " + userId + ":");
				for (Blog blog : userBlogs) {
					System.out.println(blog);
				}
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub

//		register();
		User user = signIn();

		mainMenuImpl(user);

		// addBlog();

//		updateBlog();
//		deleteBlog();

//		searchBlog();
		// getBlogByUser();

	}

}
